stages:
  - build
  - package
  - release

before_script:
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - echo "Starting job ${CI_JOB_NAME}"
  - export PIPELINE_RELEASE_TYPE="head" # or "stable"
    #- curl -qsL https://gitlab.dev.cncf.ci/cncf/cross-cloud/raw/ci-stable-v0.1.0/update_dashboard -o update_dashboard || true
  - rm -f update_dashboard
  - wget -nv http://gitlab.dev.cncf.ci/cncf/cross-cloud/raw/ci-stable-v0.1.0/update_dashboard || apk update && apk add bash curl && curl -o update_dashboard http://gitlab.dev.cncf.ci/cncf/cross-cloud/raw/ci-stable-v0.1.0/update_dashboard 
  - cat update_dashboard
  - chmod +x update_dashboard
  - bash ./update_dashboard

after_script:
  - echo "Ending job ${CI_JOB_NAME}"
  - export PIPELINE_RELEASE_TYPE="head" # or "stable"
    #- curl -qsL https://gitlab.dev.cncf.ci/cncf/cross-cloud/raw/ci-stable-v0.1.0/update_dashboard -o update_dashboard || true
  - rm -f update_dashboard
  - wget -nv http://gitlab.dev.cncf.ci/cncf/cross-cloud/raw/ci-stable-v0.1.0/update_dashboard || apk update && apk add bash curl && curl -o update_dashboard http://gitlab.dev.cncf.ci/cncf/cross-cloud/raw/ci-stable-v0.1.0/update_dashboard
  - chmod +x update_dashboard
  - bash ./update_dashboard

compile:
  image: golang:1.8.1
  stage: build
  script:
    - echo $GOPATH
    - ln -s /builds /go/src/github.com
    - cd /go/src/github.com/coredns/coredns
    - go get github.com/mholt/caddy
    - make -j $(getconf _NPROCESSORS_ONLN)
        -f Makefile.release build-linux
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks
    paths:
      - build/
      
.tar:
  stage: package
  image: golang:1.8.1
  script:
    - make -f Makefile.release tar
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks
    paths:
      - release/

container:
  stage: package
  image: docker:17.05.0
  script:
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}
    - cp build/Linux/coredns .
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - echo export COREDNS_IMAGE=$CI_REGISTRY_IMAGE | tee release.env
    - echo export COREDNS_TAG=$IMAGE_TAG | tee -a release.env
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.env

release:
  stage: release
  image: golang:1.8.1
  script:
    - cat release.env
    - curl -X POST 
        -F token=$CI_JOB_TOKEN 
        -F ref=ci-master-v0.1.0 
        https://gitlab.cncf.ci/api/v4/projects/2/trigger/pipeline
    - echo FIXME -- vars not support with CI_JOB_TOKEN yet -F "variables[COREDNS_BRANCH]=${CI_COMMIT_REF_NAME}"
  dependencies:
    - container
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.env
