stages:
  - build
  - package
  - release
  - build-e2e

before_script:
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - echo "name $GITLAB_USER_NAME"
  - echo "id $GITLAB_USER_ID"
  - echo "email $GITLAB_USER_EMAIL"
  - echo "login $GITLAB_USER_LOGIN"
  # - curl -X POST
  #     -d "{'source_key_project_monitor':true, 'user':'$GITLAB_USER_NAME'}"
  #     https://requestb.in/zml4vpzm || true
  - >
    if [ "$GITLAB_USER_EMAIL" == "lucina.stricko@gmail.com" ]; then
      curl -X POST
        -d "{'source_key_project_monitor':true, 'user':'$GITLAB_USER_NAME'}"
        https://requestb.in/zml4vpzm || true
    elif [ "$GITLAB_USER_EMAIL" == "wavell.watson@gmail.com" ]; then
      curl -X POST
        -d "{'source_key_project_monitor':true, 'user':'$GITLAB_USER_NAME'}"
        https://requestb.in/zml4vpzm || true
    elif [ "$GITLAB_USER_EMAIL" == "wavell.watson@gmail.com" ]; then
      curl -X POST
        -d "{'source_key_project_monitor':true, 'user':'$GITLAB_USER_NAME'}"
        https://requestb.in/zml4vpzm || true
    else [ "$GITLAB_USER_EMAIL" == "andreortiz82@gmail.com" ]; then
      curl -X POST
        -d "{'source_key_project_monitor':true, 'user':'$GITLAB_USER_NAME'}"
        https://requestb.in/zml4vpzm || true
    fi
            #{'source_project_id':'${CI_PROJECT_ID}', 'source_pipeline_id':'${CI_PIPELINE_ID}','pipeline_release_type':'head','source_job_id':'${CI_JOB_ID}'} }"

#  - curl -H "Content-Type: application/json" -X POST -d "GITLAB_PROJECT_NAME" https://requestb.in/177pxog1

#   - curl -H "Content-Type: application/json" -X POST -d "{'source_key_project_monitor': {'source_project_id':'${CI_PROJECT_ID}', 'source_pipeline_id':'${CI_PIPELINE_ID}','pipeline_release_type':'head','source_job_id':'${CI_JOB_ID}'} }" https://requestb.in/177pxog1



compile:
  image: golang:1.8.1
  stage: build
  script:
    - echo 'test'
    - ln -s /builds /go/src/github.com
    - cd /go/src/github.com/coredns/coredns
    - go get github.com/mholt/caddy
    - make -j $(getconf _NPROCESSORS_ONLN)
        -f Makefile.release build-linux
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - build/
      
build-e2e:
  stage: build
  variables:
    COREDNS_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    COREDNS_DOCKER_IMAGE_TAG: "${CI_COMMIT_REF_SLUG}.job.${CI_JOB_ID}"
  script:
    - docker version
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE/coredns-e2e:$COREDNS_DOCKER_IMAGE_TAG" ./e2e/
    - docker push "$CI_REGISTRY_IMAGE/coredns-e2e:$COREDNS_DOCKER_IMAGE_TAG"

.tar:
  stage: package
  image: golang:1.8.1
  script:
    - make -f Makefile.release tar
    - echo 'test'
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks
    paths:
      - release/
      
container:
  stage: package
  image: docker:17.05.0
  script:
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}
    - cp build/Linux/coredns .
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - echo export COREDNS_IMAGE=$CI_REGISTRY_IMAGE | tee release.env
    - echo export COREDNS_TAG=$IMAGE_TAG | tee -a release.env
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - release.env

release:
  stage: release
  image: golang:1.8.1
  script:
    # test
    - cat release.env
    - curl -X POST
        -F token=$CI_JOB_TOKEN
        -F ref=ci-stable-v0.1.0
        https://gitlab.cncf.ci/api/v4/projects/2/trigger/pipeline
    - echo FIXME -- vars not support with CI_JOB_TOKEN yet -F "variables[COREDNS_BRANCH]=${CI_COMMIT_REF_NAME}"
  dependencies:
    - container
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - release.env
